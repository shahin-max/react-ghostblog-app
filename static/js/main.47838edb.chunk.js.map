{"version":3,"sources":["components/TotalPosts.js","components/TotalPages.js","components/TotalAuthors.js","components/TotalTags.js","components/PublishedPosts.js","components/PostsChart.js","components/Navbar.js","Pages/Dashboard.js","components/TotalLinks.js","components/PostNotFound.js","components/BrokenInternalLinks.js","components/BrokenExternalLinks.js","Pages/PageLinks.js","components/WithoutMeta.js","components/TooLongMeta.js","components/TooLongUrl.js","components/WithoutImage.js","components/TooShortPosts.js","components/TooLongPosts.js","Pages/PostsPage.js","App.js","index.js"],"names":["TotalPosts","React","useState","posts","setPost","useEffect","axios","get","then","response","data","length","className","TotalPages","pages","setPages","TotalAuthors","authors","setAuthors","TotalTags","tags","setTags","PublishedPosts","address","PostName","postUrl","publishedPosts","setPublishedPosts","title","concat","url","slice","href","PostsChart","noOfPosts","months","chartData","setChartData","post","published_at","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","legend","display","responsive","maintainAspectRatio","scales","x","grid","y","Navbar","props","to","page","Dashboard","TotalLinks","Links","setLinks","InternalLinks","setInternalLinks","ExternalLinks","setExternalLinks","totalLinks","totalInternalLinks","totalEnternalLinks","getTotalLinks","rawHTML","doc","document","createElement","innerHTML","getElementsByTagName","link","html","NoPostsMessage","BrokenInternalLinks","flag","setFlag","c","$","done","fail","prevState","id","map","BrokenExternalLinks","ajax","type","dataType","complete","jqXHR","textStatus","status","timeout","Pages","WithoutMeta","meta_description","postName","TooLongMeta","TooLongUrl","WithoutImage","feature_image_alt","TooShortPosts","text","temp","textContent","htmlToText","replace","split","TooLongPosts","Posts","App","path","exact","PageLinks","PostsPage","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.47838edb.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction TotalPosts()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    const [posts, setPost] = React.useState(0);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            setPost(response.data.posts.length);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n    <div className='upper-boxes'>  \r\n    <p className = 'heading'>Total number of Posts  </p> \r\n     <h3> {posts}</h3>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TotalPosts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction TotalPages()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/pages/?key=8196190b08906dda0ebf6e6f5d\";\r\n    const [pages, setPages] = React.useState(0);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            setPages(response.data.pages.length);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n    <div className='upper-boxes'>  \r\n    <p className = 'heading'>Total number of Pages  </p> \r\n     <h3 > {pages}</h3>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TotalPages;\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction TotalAuthors()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/authors/?key=8196190b08906dda0ebf6e6f5d\";\r\n    const [authors, setAuthors] = React.useState(0);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            setAuthors(response.data.authors.length);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n    <div className='upper-boxes'>  \r\n    <p className = 'heading'>Total Number Of Authors </p> \r\n     <h3> {authors}</h3>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TotalAuthors;\r\n\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction TotalTags()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/tags/?key=8196190b08906dda0ebf6e6f5d\";\r\n    const [tags, setTags] = React.useState(0);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            setTags(response.data.tags.length);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n    <div className='upper-boxes'>  \r\n    <p className = 'heading'>Total number of Tags  </p> \r\n     <h3> {tags}</h3>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TotalTags;\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction PublishedPosts()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([\r\n        {\r\n          PostName: null,\r\n          postUrl: null,\r\n        },\r\n        {\r\n          PostName: null,\r\n          postUrl: null,\r\n        },\r\n        {\r\n          PostName: null,\r\n          postUrl: null,\r\n        },\r\n        {\r\n          PostName: null,\r\n          postUrl: null,\r\n        },\r\n        {\r\n          PostName: null,\r\n          postUrl: null,\r\n        },\r\n      ]);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            setPublishedPosts([\r\n                {\r\n                  PostName: response.data.posts[0].title,\r\n                  postUrl: address.concat(response.data.posts[0].url.slice(27)),\r\n                },\r\n                {\r\n                  PostName: response.data.posts[1].title,\r\n                  postUrl: address.concat(response.data.posts[1].url.slice(27)),\r\n                },\r\n                {\r\n                  PostName: response.data.posts[2].title,\r\n                  postUrl: address.concat(response.data.posts[2].url.slice(27)),\r\n                },\r\n                {\r\n                  PostName: response.data.posts[3].title,\r\n                  postUrl: address.concat(response.data.posts[3].url.slice(27)),\r\n                },\r\n                {\r\n                  PostName: response.data.posts[4].title,\r\n                  postUrl: address.concat(response.data.posts[4].url.slice(27)),\r\n                },\r\n              ]);\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n    <div className='lower-boxes'>  \r\n    <p className = 'heading-bottom'>Latest 5 published posts  </p> \r\n    <ul>\r\n        <li className='posts'> <a href={publishedPosts[0].postUrl}>{publishedPosts[0].PostName}</a> </li>\r\n        <li className='posts'> <a href={publishedPosts[1].postUrl}>{publishedPosts[1].PostName}</a> </li>\r\n        <li className='posts'> <a href={publishedPosts[2].postUrl}>{publishedPosts[2].PostName}</a> </li>\r\n        <li className='posts'> <a href={publishedPosts[3].postUrl}>{publishedPosts[3].PostName}</a> </li>\r\n        <li className='posts'> <a href={publishedPosts[4].postUrl}>{publishedPosts[4].PostName}</a> </li>\r\n    </ul>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default PublishedPosts;\r\n\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\n\r\nfunction PostsChart()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let noOfPosts = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n    let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    const [chartData, setChartData] = React.useState({});\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) {\r\n                noOfPosts[post.published_at.slice(5,7)-1]++;\r\n            }\r\n            setChartData({\r\n              labels: months,\r\n              datasets: [\r\n                {\r\n                  label: \"Number of Posts\",\r\n                  data: noOfPosts,\r\n                  backgroundColor: [\"rgba(137, 196, 244, 0.6)\"],\r\n                  borderColor: 'rgba(30, 139, 195, 1)',\r\n                  borderWidth: 2,                \r\n                }                 \r\n              ]             \r\n            },\r\n            );\r\n          });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='lower-boxes'>  \r\n    <p className = 'heading-bottom'>Posts Chart Per Month</p> \r\n    <div className='chart'>\r\n        <Bar data={chartData} options={{\r\n              plugins: {\r\n                legend: {\r\n                  display: false\r\n                }\r\n              },            \r\n            responsive: true,\r\n            maintainAspectRatio : false,\r\n            scales: {\r\n                x: {\r\n                    grid:{\r\n                     display:false\r\n                         }\r\n                   },\r\n                y: \r\n                   {\r\n                 grid:{\r\n                  display:false\r\n                      }\r\n                   }\r\n                       }\r\n              \r\n          }}/>\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default PostsChart;\r\n\r\n","import {Link} from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nfunction Navbar(props)\r\n{\r\n    return (\r\n        <div className='navbar'>\r\n            <div className='page-name'>React-GhostBlog-App</div>\r\n            <div className='links'>\r\n                <div className='nav-links'><Link to='/' className ={(props.page==='dashboard')?'nav-links-styling-active':'nav-links-styling'}>Dashboard</Link></div>\r\n                <div className='nav-links'><Link to='/posts' className ={(props.page==='posts')?'nav-links-styling-active':'nav-links-styling'}>PostsPage</Link></div>\r\n                <div className='nav-links'><Link to='/pages' className ={(props.page==='pages')?'nav-links-styling-active':'nav-links-styling'}>PageLinks</Link></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import TotalPosts from '../components/TotalPosts'\r\nimport TotalPages from '../components/TotalPages'\r\nimport TotalAuthors from '../components/TotalAuthors'\r\nimport TotalTags from '../components/TotalTags'\r\nimport PublishedPosts from '../components/PublishedPosts'\r\nimport PostsChart from '../components/PostsChart'\r\nimport Navbar from '../components/Navbar'\r\n\r\n\r\nfunction Dashboard()\r\n{\r\n    return (<div className='container'>\r\n    <div><Navbar page='dashboard'/></div>\r\n    <div className='upper-box'>\r\n      <TotalPosts />\r\n      <TotalPages />\r\n      <TotalAuthors />\r\n      <TotalTags />\r\n    </div>\r\n    <div className='lower-box'>\r\n      <PublishedPosts />\r\n      <PostsChart />\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default Dashboard;","import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction TotalLinks()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let internal ='https://ghost';\r\n\r\n    const [Links, setLinks] = React.useState(0);\r\n    const [InternalLinks, setInternalLinks] = React.useState(0);\r\n    const [ExternalLinks, setExternalLinks] = React.useState(0);\r\n\r\n\r\n    let totalLinks = 0;\r\n    let totalInternalLinks = 0;\r\n    let totalEnternalLinks = 0;\r\n\r\n    function getTotalLinks(rawHTML)\r\n    {\r\n        let doc = document.createElement(\"html\");\r\n        doc.innerHTML = rawHTML;\r\n        let link = doc.getElementsByTagName(\"a\");\r\n        return link;\r\n    }\r\n    \r\n\r\n    \r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                let rawHTML = post.html;\r\n                let link = getTotalLinks(rawHTML);\r\n                // eslint-disable-next-line\r\n                totalLinks = totalLinks+(link.length);\r\n\r\n                for (const c of link) {\r\n                    let urlBeginning=c.href.slice(0,13);\r\n                    if(urlBeginning===internal)\r\n                    {\r\n                        totalInternalLinks++;\r\n                    }\r\n                    else\r\n                    {\r\n                         totalEnternalLinks++;\r\n                    }\r\n                  }\r\n            }\r\n            setLinks(totalLinks);\r\n            setInternalLinks(totalInternalLinks);\r\n            setExternalLinks(totalEnternalLinks);\r\n\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n    <div className='pages-upper-box'>  \r\n    <p className = 'pages-heading'>Total number of Links </p> \r\n     <h3> {Links}</h3>\r\n     <p className = 'pages-heading'>Total number of Internal Links </p> \r\n     <h3> {InternalLinks}</h3>\r\n     <p className = 'pages-heading'>Total number of External Links </p> \r\n     <h3> {ExternalLinks}</h3>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default TotalLinks;\r\n","export default function NoPostsMessage()\r\n{\r\n    return(<div className='none-found'> &#128079; No Post Found Here!</div>)\r\n}","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport PostNotFound from \"./PostNotFound\";\r\nimport { useState } from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nexport default function BrokenInternalLinks()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let internal ='https://ghost';\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n\r\n    function getTotalLinks(rawHTML)\r\n    {\r\n        let doc = document.createElement(\"html\");\r\n        doc.innerHTML = rawHTML;\r\n        let link = doc.getElementsByTagName(\"a\");\r\n        return link;\r\n    }\r\n    \r\n\r\n          \r\n      \r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                let rawHTML = post.html;\r\n                let link = getTotalLinks(rawHTML);\r\n                for (const c of link) {\r\n                    let urlBeginning=c.href.slice(0,13);\r\n                    if(urlBeginning===internal)\r\n                    {\r\n                        $.get(c.href).done(function () {\r\n                          }).fail(function () {\r\n                            setFlag(false);\r\n                            setPublishedPosts(prevState => [...prevState, { postUrl : c.href,\r\n                                id : post.id\r\n                              }]);  \r\n                          });                        \r\n                    }\r\n                  }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n    <div className='pages-boxes'>  \r\n        <p className = 'heading-bottom'>Broken Internal Links </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='pages-posts' key={post.id}> <a href={post.postUrl}>{post.postUrl}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport PostNotFound from \"./PostNotFound\";\r\nimport { useState } from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nexport default function BrokenExternalLinks()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let internal ='https://ghost';\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n\r\n    function getTotalLinks(rawHTML)\r\n    {\r\n        let doc = document.createElement(\"html\");\r\n        doc.innerHTML = rawHTML;\r\n        let link = doc.getElementsByTagName(\"a\");\r\n        return link;\r\n    }\r\n    \r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                let rawHTML = post.html;\r\n                let link = getTotalLinks(rawHTML);\r\n                for (const c of link) \r\n                {\r\n                    let urlBeginning=c.href.slice(0,13);\r\n                    if(urlBeginning!==internal)\r\n                    {\r\n                        $.ajax({\r\n                            url: c.href,\r\n                            type: 'GET',\r\n                            dataType: 'jsonp',\r\n                            complete: function(jqXHR, textStatus) \r\n                            {\r\n                                if(jqXHR.status!=200)\r\n                                {\r\n                                    setFlag(false);\r\n                                    setPublishedPosts(prevState => [...prevState, { postUrl : c.href,\r\n                                        id : post.id\r\n                                        }]);  \r\n                                }\r\n                            },\r\n                            timeout: 3000\r\n                            });\r\n\r\n                    }     \r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n    <div className='pages-boxes'>  \r\n        <p className = 'heading-bottom'>Broken External Links </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='pages-posts' key={post.id}> <a href={post.postUrl}>{post.postUrl}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import Navbar from '../components/Navbar'\r\nimport TotalLinks from '../components/TotalLinks'\r\nimport BrokenInternalLinks from '../components/BrokenInternalLinks'\r\nimport BrokenExternalLinks from '../components/BrokenExternalLinks'\r\n\r\nfunction Pages()\r\n{\r\n    return (\r\n    <div>\r\n        <div><Navbar page='pages'/></div>\r\n        <div className='pages-container'>\r\n            <TotalLinks />\r\n            <BrokenInternalLinks />\r\n            <BrokenExternalLinks />\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Pages;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from 'react';\r\nimport PostNotFound from \"./PostNotFound\"\r\n\r\n\r\n\r\nexport default function WithoutMeta()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                if(post.meta_description ===null)\r\n                {\r\n                    setFlag(false);\r\n                    setPublishedPosts(prevState => [...prevState, { postUrl : address.concat(post.url.slice(27)),\r\n                        postName: post.title,\r\n                        id : post.id\r\n                      }]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='post-boxes' >  \r\n        <p className = 'heading-bottom'>Posts Without Meta Descriptions</p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='post-posts' key={post.id}> <a href={post.postUrl}>{post.postName}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from 'react';\r\nimport PostNotFound from \"./PostNotFound\"\r\n\r\n\r\nexport default function TooLongMeta()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                if(post.meta_description && post.meta_description.length >155)\r\n                {\r\n                    setFlag(false);\r\n                    setPublishedPosts(prevState => [...prevState, { postUrl : address.concat(post.url.slice(27)),\r\n                        postName: post.title,\r\n                        id : post.id\r\n                      }]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='post-boxes' id='long-meta'>  \r\n        <p className = 'heading-bottom'>Too Long Meta Description </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='post-posts' key={post.id}> <a href={post.postUrl}>{post.postName}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport PostNotFound from \"./PostNotFound\"\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function TooLongUrl()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                if(post.meta_description && post.url.length >100)\r\n                {   \r\n                    setFlag(false);\r\n                    setPublishedPosts(prevState => [...prevState, { postUrl : address.concat(post.url.slice(27)),\r\n                        postName: post.title,\r\n                        id : post.id\r\n                      }]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='post-boxes'>  \r\n        <p className = 'heading-bottom'>Too Long URL </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='post-posts' key={post.id}> <a href={post.postUrl}>{post.postName}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport PostNotFound from \"./PostNotFound\";\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function WithoutImage()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                if(post.feature_image_alt!==null)\r\n                {   \r\n                    setFlag(false);\r\n                    setPublishedPosts(prevState => [...prevState, { postUrl : address.concat(post.url.slice(27)),\r\n                        postName: post.title,\r\n                        id : post.id\r\n                      }]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='post-boxes'>  \r\n        <p className = 'heading-bottom'>Without Featured Image </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='post-posts' key={post.id}> <a href={post.postUrl}>{post.postName}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport PostNotFound from \"./PostNotFound\";\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function TooShortPosts()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n    function htmlToText(html) {\r\n        var temp = document.createElement('div');\r\n        temp.innerHTML = html;\r\n        return temp.textContent; \r\n    }\r\n    function countWords(str) {\r\n        str = str.replace(/(^\\s*)|(\\s*$)/gi,\"\");\r\n        str = str.replace(/[ ]{2,}/gi,\" \");\r\n        str = str.replace(/\\n /,\"\\n\");\r\n        return str.split(' ').length;\r\n     }\r\n    \r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                let text=htmlToText(post.html);\r\n                let wordCount = countWords(text);\r\n                if(wordCount <250)\r\n                {   \r\n                    setFlag(false);\r\n                    setPublishedPosts(prevState => [...prevState, { postUrl : address.concat(post.url.slice(27)),\r\n                        postName: post.title,\r\n                        id : post.id\r\n                      }]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='post-boxes'>  \r\n        <p className = 'heading-bottom'>Too Short Posts </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='post-posts' key={post.id}> <a href={post.postUrl}>{post.postName}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport PostNotFound from \"./PostNotFound\";\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function TooLongPosts()\r\n{\r\n    const url = \"https://ghost-blog.ipxp.in/ghost/api/v4/content/posts/?key=8196190b08906dda0ebf6e6f5d\";\r\n    let address = 'https://ghost-blog.ipxp.in/'\r\n    const [publishedPosts, setPublishedPosts] = React.useState([]);\r\n    const [flag, setFlag] = useState(true);\r\n\r\n    function htmlToText(html) {\r\n        var temp = document.createElement('div');\r\n        temp.innerHTML = html;\r\n        return temp.textContent; \r\n    }\r\n    function countWords(str) {\r\n        str = str.replace(/(^\\s*)|(\\s*$)/gi,\"\");\r\n        str = str.replace(/[ ]{2,}/gi,\" \");\r\n        str = str.replace(/\\n /,\"\\n\");\r\n        return str.split(' ').length;\r\n     }\r\n    \r\n    React.useEffect(() => \r\n    {\r\n        axios.get(url).then((response) => \r\n        {\r\n            for (const post of response.data.posts) \r\n            {\r\n                let text=htmlToText(post.html);\r\n                let wordCount = countWords(text);\r\n                if(wordCount >1500)\r\n                {   \r\n                    setFlag(false);\r\n                    setPublishedPosts(prevState => [...prevState, { postUrl : address.concat(post.url.slice(27)),\r\n                        postName: post.title,\r\n                        id : post.id\r\n                      }]);\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className='post-boxes'>  \r\n        <p className = 'heading-bottom'>Too Long Posts </p> \r\n        <ul>\r\n            {publishedPosts.map(post => {\r\n                return (\r\n                <li className='post-posts' key={post.id}> <a href={post.postUrl}>{post.postName}</a> </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <div>{flag && <PostNotFound />}</div>\r\n    </div>\r\n    );\r\n}\r\n","import Navbar from '../components/Navbar'\r\nimport WithoutMeta from '../components/WithoutMeta'\r\nimport TooLongMeta from '../components/TooLongMeta'\r\nimport TooLongUrl from '../components/TooLongUrl'\r\nimport WithoutImage from '../components/WithoutImage'\r\nimport TooShortPosts from '../components/TooShortPosts'\r\nimport TooLongPosts from '../components/TooLongPosts'\r\n\r\n\r\n\r\nfunction Posts()\r\n{\r\n    return (\r\n    <div>\r\n        <div><Navbar page='posts'/></div>\r\n        <div className='posts-container'>\r\n            <div><WithoutMeta /></div>\r\n            <div><TooLongMeta /></div>\r\n            <div><TooLongUrl /></div>\r\n            <div><WithoutImage /></div>\r\n            <div><TooShortPosts /></div>\r\n            <div><TooLongPosts /></div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Posts;\r\n\r\n\r\n","import {Route, Switch} from 'react-router-dom'\nimport Dashboard from './Pages/Dashboard'\nimport PageLinks from './Pages/PageLinks'\nimport PostsPage from './Pages/PostsPage'\n\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path='/' exact><Dashboard /></Route>\n        <Route path='/pages'><PageLinks /></Route>\n        <Route path='/posts'><PostsPage /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}